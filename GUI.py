
import Validation
import matplotlib.pyplot as plt
from PyQt5.QtWidgets import QMessageBox
from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_functionplotter(object):
    def setupUi(self, functionplotter):
        functionplotter.setObjectName("functionplotter")
        functionplotter.resize(937, 337)
        self.centralwidget = QtWidgets.QWidget(functionplotter)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(280, 0, 371, 51))
        font = QtGui.QFont()
        font.setPointSize(19)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.function = QtWidgets.QLineEdit(self.centralwidget)
        self.function.setGeometry(QtCore.QRect(300, 80, 251, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.function.setFont(font)
        self.function.setObjectName("function")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(40, 70, 241, 41))
        font = QtGui.QFont()
        font.setFamily("MS Reference Sans Serif")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(60, 140, 371, 41))
        font = QtGui.QFont()
        font.setFamily("MS Reference Sans Serif")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.minX = QtWidgets.QLineEdit(self.centralwidget)
        self.minX.setGeometry(QtCore.QRect(420, 140, 61, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.minX.setFont(font)
        self.minX.setObjectName("minX")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(100, 200, 371, 41))
        font = QtGui.QFont()
        font.setFamily("MS Reference Sans Serif")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.maxX = QtWidgets.QLineEdit(self.centralwidget)
        self.maxX.setGeometry(QtCore.QRect(420, 200, 61, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.maxX.setFont(font)
        self.maxX.setObjectName("maxX")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(180, 250, 101, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.draw)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(620, 140, 291, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(620, 100, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(620, 180, 311, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        functionplotter.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(functionplotter)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 937, 26))
        self.menubar.setObjectName("menubar")
        functionplotter.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(functionplotter)
        self.statusbar.setObjectName("statusbar")
        functionplotter.setStatusBar(self.statusbar)

        self.retranslateUi(functionplotter)
        QtCore.QMetaObject.connectSlotsByName(functionplotter)

    def retranslateUi(self, functionplotter):
        _translate = QtCore.QCoreApplication.translate
        functionplotter.setWindowTitle(_translate("functionplotter", "MainWindow"))
        self.label.setText(_translate("functionplotter", "       Function Plotter "))
        self.label_2.setText(_translate("functionplotter", "          Enter a Function :"))
        self.label_3.setText(_translate("functionplotter", "      Enter The Minimim Value of  x :"))
        self.label_4.setText(_translate("functionplotter", "Enter The Maximim Value of  x :"))
        self.pushButton.setText(_translate("functionplotter", "plot"))
        self.label_5.setText(_translate("functionplotter", "Enter a Function Like: 5*x^3 + 2*x"))
        self.label_6.setText(_translate("functionplotter", "Notes:"))
        self.label_7.setText(_translate("functionplotter", "The Supported Operators: + - / * ^"))


    def PopUpMessage(self, error_message): # function to print the error
        msg = QMessageBox()
        msg.setWindowTitle("error")
        msg.setText(error_message)
        x=msg.exec_()

    def draw(self):  # the function that draw the function
        function = self.function.text()
        minX = self.minX.text()
        maxX = self.maxX.text()
        answer= Validation.validInputs(function,minX,maxX) # check if the input is valid
        if answer!="true": # if the input not valid we should print the error
            self.PopUpMessage(answer)
            return

        # if we reached here so the input is valid
        minX = int(self.minX.text())
        maxX = int(self.maxX.text())
        listX = []
        listY = []
        for i in range(minX, maxX):
            tmp = function.replace("x", '(' + str(i) + ')') # if we have x^2 and x is negative
            tmp=tmp.replace("^","**")
            tmp=tmp.replace(' ', '')
            x = eval(tmp)
            listX.append(i)
            listY.append(x)
        plt.plot(listX, listY, color="black")
        plt.style.use("seaborn-dark")
        plt.xlabel("X")
        plt.ylabel("F(X)")
        plt.grid()
        plt.show()


